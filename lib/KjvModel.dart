// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"
// To parse this JSON data, do
//
//     final kjv = kjvFromJson(jsonString);

import 'dart:convert';

Versions versionsFromJson(String str) {
  final jsonData = json.decode(str);
  return Versions.fromJson(jsonData);
}

String versionsToJson(Versions data) {
  final dyn = data.toJson();
  return json.encode(dyn);
}

class Versions {
  String? versionName;
  List<Books>? books;

  Versions({
      this.versionName,
      this.books,
  });

  factory Versions.fromJson(Map<String, dynamic> json) => Versions(
        versionName: json["version_name"],
        books:
            List<Books>.from(json["version"].map((x) => Books.fromJson(x))),
      );

  Map<String, dynamic> toJson() => {
        "version_name": versionName,
        "version": List<dynamic>.from(books!.map((x) => x.toJson())),
      };
}

class Books {
  int chapter;
  int verse;
  String text;
  String translationId;
  String bookId;
  String bookName;
  String testament;

  Books({
    required this.chapter,
    required this.verse,
    required this.text,
    required this.translationId,
    required this.bookId,
    required this.bookName,
    required this.testament,
  });

  factory Books.fromJson(Map<String, dynamic> json) => Books(
        chapter: json["chapter"],
        verse: json["verse"],
        text: json["text"],
        translationId: json["translation_id"],
        bookId: json["book_id"],
        bookName: json["book_name"],
        // bookName:utf8.decode( Uint8List.fromList(json["book_name"].codeUnits)),
        testament: json["testament"],
      );

  Map<String, dynamic> toJson() => {
        "chapter": chapter,
        "verse": verse,
        "text": text,
        "translation_id": translationId,
        "book_id": bookId,
        "book_name": bookName,
        "testament": testament,
      };
}
